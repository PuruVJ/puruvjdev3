{"title":"Async Await usage and pitfalls in Array.prototype.map() and chaining","description":"Using async await in array methods is quite tricky. But it gets even trickier when you chain multiple array methods. Find out how.","date":"29 Sep, 2020 3:35 PM","published":true,"cover_image":"media/blog-social-intro.png","body":"<p>Let's consider the code below</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> IDs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersData </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> IDs</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(id))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #A6ACCD\">(usersData)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>What would this output?</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">[</span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>All these are promises. But we are expecting data as objects(or whatever other format you can think of) here. How do <code>await</code> every single array item?</p>\n<p>The solution here is <code>Promise.all</code>. Quick recap:</p>\n<p><code>Promise.all</code> takes in an array of promises, runs them concurrently until they <code>all</code> resolve, and return a bigger <code>promise</code> with the outcomes from those promises as resolved values as an Array</p>\n<p>For example</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">all</span><span style=\"color: #A6ACCD\">([</span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\">)])</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>will return</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">[</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F07178\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #A6ACCD\">otherData </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F07178\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #A6ACCD\">otherData </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F07178\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #A6ACCD\">otherData </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>If you think about it, the code snippet where we're mapping over IDs is just an Array of Promises. We can directly <code>Promise.all</code> that array</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> IDs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersDataPromises </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> IDs</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(id))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersData </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">all</span><span style=\"color: #A6ACCD\">(usersDataPromises)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #A6ACCD\">(usersData)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>That would output us the same object as above</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #A6ACCD\">[</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F07178\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #A6ACCD\">otherData </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F07178\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #A6ACCD\">otherData </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F07178\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">...</span><span style=\"color: #A6ACCD\">otherData </span><span style=\"color: #89DDFF\">},</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<h1 id=\"Tricky-part\"><a class=\"heading-link\" href=\"blog/chaining-promises-array-methods#Tricky-part\">#</a>Tricky part</h1>\n<p>The trick above works like a charm. However, difficulty arises when you chain another array method to the existing array, like this</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> IDs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersDataPromise </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> IDs</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(id))</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #A6ACCD\">(</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">data</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getPosts</span><span style=\"color: #A6ACCD\">(data)</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersData </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">all</span><span style=\"color: #A6ACCD\">(usersDataPromise)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #A6ACCD\">(usersData)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<p>It will return an error. Why?</p>\n<p><code>Promise.all</code> tries to run all promises at once. And I mean, <strong>All of them</strong>. It will try to run the 2nd <code>map</code> <strong>alongside</strong> the first map. You can see for yourself this is a problem, as the second <code>map</code> depends on the value from the first.</p>\n<p>How do we resolve this (Pun intended <img class=\"emoji\" draggable=\"false\" alt=\"😎\" src=\"https://twemoji.maxcdn.com/v/13.0.2/svg/1f60e.svg\">)?</p>\n<h1 id=\"Solutions\"><a class=\"heading-link\" href=\"blog/chaining-promises-array-methods#Solutions\">#</a>Solutions</h1>\n<p>There can be many ways to solve this problem. I will share 2 here</p>\n<h2 id=\"1st\"><a class=\"heading-link\" href=\"blog/chaining-promises-array-methods#1st\">#</a>1st</h2>\n<p><code>Promise.all</code> at every single step</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> IDs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersData </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">all</span><span style=\"color: #A6ACCD\">(</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  IDs</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getUserData</span><span style=\"color: #A6ACCD\">(id))</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersPosts </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Promise</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">all</span><span style=\"color: #A6ACCD\">(</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  usersData</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">map</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #C792EA\">async</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">userData</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">getPosts</span><span style=\"color: #A6ACCD\">(userData))</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"2nd\"><a class=\"heading-link\" href=\"blog/chaining-promises-array-methods#2nd\">#</a>2nd</h2>\n<p>A plain old <code>for of</code> loop:</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> IDs </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">3</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> usersPosts </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> []</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">for</span><span style=\"color: #A6ACCD\"> (</span><span style=\"color: #C792EA\">let</span><span style=\"color: #A6ACCD\"> id </span><span style=\"color: #89DDFF\">of</span><span style=\"color: #A6ACCD\"> IDs) </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">userData</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">getUsersData</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">id</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">userPosts</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">await</span><span style=\"color: #F07178\"> </span><span style=\"color: #82AAFF\">getPosts</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">userData</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">usersPosts</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">push</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">userPosts</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<p>I prefer the 2nd approach. If you wanna add an extra step, you simply add an extra line, whereas the 2st will require a whole extra <code>Promise.all(array map)</code>, which ultimately is just code redundancy.</p>\n","id":"chaining-promises-array-methods","reading_time":3.35,"toc":[{"indent":0,"id":"","title":"Tricky part","length":11},{"indent":0,"id":"","title":"Solutions","length":9},{"indent":1,"id":"","title":"1st","length":3},{"indent":1,"id":"","title":"2nd","length":3}]}